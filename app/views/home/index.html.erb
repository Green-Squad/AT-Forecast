<% content_for :sidebar do %>
  <p class="brand-tagline">
    The fast, free and <a href="https://github.com/Green-Squad/AT-Forecast">open source</a> solution for weather on the Appalachian Trail.
  </p>
<% end %>

<h2 class="content-subhead">Find Shelter by mile.</h2>
<form id="mile-search-form" onsubmit="return nearestShelter();" action="#" accept-charset="UTF-8" method="post" class="pure-form pure-g">
  <div class="pure-u-5-6">
    <input type="number" step="0.1" name="mileage" id="mileage" class="pure-u-1" placeholder="NOBO Mileage e.g. 630">
  </div>
  <div class="pure-u-1-6">
    <div class="pure-g fill-height">
      <div class="pure-u-1-24"></div>
      <input type="submit" value="Go" class="pure-button pure-button-primary pure-u-23-24">
    </div>
  </div>
</form>

<h2 class="content-subhead">Find Shelter by current location.</h2>

<div class="pure-button pure-button-primary" id="gps-button">Find by GPS</div>

<h2 class="content-subhead">Find Shelter by state.</h2>
<% @states.each do |state, state_info| %>
  <div class="state-content pure-g">
    <div class="pure-u-1 pure-u-md-2-3">
      <div class="state pure-button pure-u-1 display-table" data-statename="<%= state.to_s.delete(' ') %>">
        <div class="table-cell pull-left">
          <%= state %>
        </div>
        <div class="table-cell pull-right">
          <span class="post-category">State average: <%= state_info[:average_weather][:high] %>&deg; / <%= state_info[:average_weather][:low] %>&deg;</span>
        </div>
      </div>
      <div id="<%= state.to_s.delete(' ') %>" class="hidden">
        <table class="pure-table pure-table-striped shelter-list fill-width">
          <% state_info[:shelters].each do |shelter| %>
          <tr class="clickable-shelter" data-href="<%= shelter_url(shelter) %>">
            <td><%= shelter.mileage %></td>
            <td>
              <a href="<%= shelter_path(shelter) %>"><%= shelter.name %></a>
            </td>
          </tr>
          <% end %>
        </table>
      </div>
    </div>
  </div>
<% end %>

<script type="text/javascript">
  var clickableShelters = document.getElementsByClassName('clickable-shelter');
  for (var i = 0; i < clickableShelters.length; i++) {
    clickableShelters[i].addEventListener('click', function() {
      shelterPath = this.dataset.href;
      window.location.href = shelterPath;
    });
  }
  function nearestShelter() {
    var mileage = document.getElementById('mileage').value;
    if (mileage !== '') {
      window.location.href = '/nearest_shelter?nobo_mile=' + mileage;
    }
    return false;
  }

  states = document.getElementsByClassName('state');
  for (var i = 0; i < states.length; i++) {
      states[i].addEventListener('click', function() {
        state = this.dataset.statename;
        stateWeather = document.getElementById(state);
        if (stateWeather.className === 'hidden') {
          stateWeather.className = 'show';
        } else {
          stateWeather.className = 'hidden';
        }
      });
  }
  document.addEventListener('keydown', (event) => {
    if (event.keyCode === 9) {
      nearestShelter();
    }
  });

  var gpsButton = document.getElementById('gps-button');
  gpsButton.addEventListener('click', function() {
    gpsButton.innerHTML = 'Loading...';
    var options = {
      enableHighAccuracy: true,
      timeout: 5000,
      maximumAge: 0
    };

    function success(pos) { // success callback
      var coords = [pos.coords.latitude, pos.coords.longitude];
      goToPage(coords);
    };

    function goToPage(coords) {
      window.location.href = '/nearest_shelter?coords=' + coords[0] + ',' + coords[1];
    }

    function error(err) { // error callback
      console.warn('ERROR(' + err.code + '): ' + err.message);
      gpsButton.innerHTML = 'Error: ' + err.message;
    };

    navigator.geolocation.getCurrentPosition(success, error, options);
  });







</script>
